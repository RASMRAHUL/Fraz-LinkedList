25. Reverse Nodes in k-Group


lass Solution {
public:

    int getLength(ListNode* head)
    {
        int count = 0;
        while(head)
        {
            count++;
            head = head->next;
        }
        return count;
    }
    
    ListNode* reverseKGroup(ListNode* head, int k) {

        if(head == NULL || getLength(head) < k)
            return head;
        
        ListNode* farward = NULL;
        ListNode* curr = head;
        ListNode* prev = NULL;
        int count = 0;

        while(curr != NULL && count < k)
        {
            farward = curr->next;
            curr->next = prev;
            prev= curr;
            curr = farward;
            count++;
        }

        if(farward != NULL)
            head->next = reverseKGroup(farward , k);
        

        return prev;
    }

};
